

# for number in range(1000):
#     if number%3==0 or number%5==0:
#         sum =sum+number
#     print(sum)



# list_1 = []
# n1 =1
# n2= 2
# for i in list_1:
#     list_1[i+2]=list_1[i]+list_1[i+1]
#     list_1.append(list_1[i+2])
# print(list_1)

#Problem 2:
#
# '''Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# #1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# #By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# '''
# n1, n2 = 1, 2
# count = 0
# while n1 <= 4000000:
#     if n1 % 2 == 0:
#         count += n1
#     n1, n2 = n2, n1+n2
# print(count)
#import math

# Problem 3:
# What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
# Returns the lcm of first n numbers
# def lcm(n):
#     ans = 1
#     for i in range(1, n + 1):
#         ans = int((ans * i) / math.gcd(ans, i))
#     return ans
# # main
# n = 20
# print(lcm(n))
'''Problem 4:
The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.'''
# sum=0
# for i in range(2, 200):
#     prime=True
#     if i%i==0 and i
#         sum=sum+i
# print(sum)

# prime_numbers = []
# for num in range(2, 2001):
#     prime = True
#     for i in range(2, num):
#         if num % i == 0:
#             prime = False
#     if prime is True:
#         prime_numbers.append(num)
# print(sum(prime_numbers))

#Question 4 using MATH module
# import math
# prime_numbers = [2]
# for num in range(3, 2000001, 2):
#     if all(num % i != 0 for i in range(3, int(math.sqrt(num))+1, 2)):
#         prime_numbers.append(num)
# print(sum(prime_numbers))


"""Problem 5:
If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.

If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?

NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage."""

from num2words import num2words
from num2words import lang_EN
# list1 = []
# for i in range(1, 1001):
#     num = num2words(i).replace("_", "").replace(" ", "")
#     list1.append(num)
#
# print("\n".join(list1))
# print(sum(len(i) for i in list1))
# print(num2words(582))
from num2words import num2words

list_of_nums = []
for number in range(1, 1001):
    num = num2words(number).replace("-", "").replace(" ", "")
    list_of_nums.append(num)
print("\n".join(list_of_nums))
print(sum(len(i) for i in list_of_nums))